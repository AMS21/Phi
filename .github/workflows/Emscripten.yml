name: Emscripten

on:
  push:
    paths:
      # Workflow file itself
      - '.github/workflows/Emscripten.yml'
      # C++ files
      - '**.cpp'
      - '**.hpp'
      # CMake files
      - '**.cmake'
      - '**.txt'
      # Script files
      - '**.sh'
    branches-ignore:
      - 'dependabot/**'
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  Build:
    runs-on: ubuntu-20.04

    env:
      CMAKE_BUILD_PARALLEL_LEVEL: "2"
      CTEST_PARALLEL_LEVEL: "2"
      CTEST_OUTPUT_ON_FAILURE: "ON"
      EM_CACHE_FOLDER: 'emsdk-cache'

    strategy:
      fail-fast: false

      matrix:
        em_version:
          - "3.1.6"
          - "3.0.1"
          - "2.0.34"
          - "1.40.1"
          - "1.39.20"
          - "1.38.48"

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Emscripten
        uses: mymindstorm/setup-emsdk@v11
        with:
          version: ${{ matrix.em_version }}
          actions-cache-folder: ${{ env.EM_CACHE_FOLDER }}

      - name: Verify version
        run: |
          emcc --version

      - name: Install cmake
        uses: lukka/get-cmake@v3.23.0

      - name: Configure build directory
        run: |
          mkdir -p build
          cd build

          emcmake cmake -DCMAKE_VERBOSE_MAKEFILE=ON ..

      - name: Build Debug
        run: |
          cd build

          emcmake cmake .. -DCMAKE_BUILD_TYPE=Debug
          emmake cmake --build . --clean-first
          ctest . -C Debug

      - name: Build RelWithDebInfo
        run: |
          cd build

          emcmake cmake .. -DCMAKE_BUILD_TYPE=RelWithDebInfo
          emmake cmake --build . --clean-first
          ctest . -C RelWithDebInfo

      - name: Build Release
        run: |
          cd build

          emcmake cmake .. -DCMAKE_BUILD_TYPE=Release
          emmake cmake --build . --clean-first
          ctest . -C Release
