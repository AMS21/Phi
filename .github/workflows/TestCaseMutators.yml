name: TestCaseMutators

on: [push, pull_request]

jobs:
  mull:
    runs-on: ubuntu-20.04
    env:
      LLVM_VERSION: 13
      CMAKE_BUILD_PARALLEL_LEVEL: "2"

    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
        with:
          submodules: recursive

      - uses: reviewdog/action-setup@v1.0.3
        with:
          reviewdog_version: latest

      - name: Install cmake
        uses: lukka/get-cmake@v3.21.2

      - name: Install clang
        run: |
          # Add repository
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo add-apt-repository "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-${{ env.LLVM_VERSION }} main"

          # Install
          sudo apt-get update -m
          sudo apt-get install clang-${{ env.LLVM_VERSION }}

          echo "CC=clang-${{ env.LLVM_VERSION }}" >> $GITHUB_ENV
          echo "CXX=clang++-${{ env.LLVM_VERSION }}" >> $GITHUB_ENV

      - name: Install mull
        run: |
          curl -1sLf 'https://dl.cloudsmith.io/public/mull-project/mull-stable/setup.deb.sh' | sudo -E bash

          sudo apt-get update
          sudo apt-get install mull-${{ env.LLVM_VERSION }}

          # Verify everythings works
          mull-cxx-${{ env.LLVM_VERSION }} --version

      - name: Get clang include paths
        run: |
          clang++-${{ env.LLVM_VERSION }} -x c++ -c /dev/null --verbose &> clang_includes.txt
          grep -ozP '(?s)#include <...> search starts here:\n\K.*?(?=\nEnd of search list.\Z)' clang_includes.txt | head -c -1 | sed -e "s/.*/-isystem&/" | tr '\n' ' ' > clang_includes_filtered.txt

          cat clang_includes.txt
          echo "CLANG_INCLUDES=$(cat clang_includes_filtered.txt)" >> $GITHUB_ENV

      - name: Configure
        run: |
          # Create build directory
          mkdir build
          cd build

          # Generate compile_commands.json
          cmake .. -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DPHI_ENABLE_CONSTEXPRTESTS=Off -DPHI_ENABLE_FAILURE_TESTS=Off -DCMAKE_CXX_FLAGS="-fembed-bitcode -g -O0" -DCMAKE_BUILD_TYPE=Debug

      - name: Build
        run: |
          cd build
          cmake --build .

      - name: Run mull
        run: |
          cd build
          find bin -type f -iname "Phi_Unittest_*" -exec bash -c 'mull-cxx-${{ env.LLVM_VERSION }} -linker=clang++-${{ env.LLVM_VERSION }} -compdb-path compile_commands.json -compilation-flags="$CLANG_INCLUDES" -exclude-path="../external/.*" ./$0' {} \; | tee --append mull_report.log

          # Remove duplicate entries
          sort mull_report.log | uniq -d > mull_report_filtered.log

      - name: Print results
        run: cat build/mull_report_filtered.log

      - name: ReviewDog check
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cat build/mull_report_filtered.log | reviewdog -efm="%f:%l:%c: warning: %m" -diff="git diff" -reporter=github-check -name mull -level warning
