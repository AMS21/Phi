name: TestCaseMutators

on: [push, pull_request]

jobs:
  mull:
    runs-on: ubuntu-20.04
    env:
      LLVM_VERSION: 10
      CMAKE_BUILD_PARALLEL_LEVEL: "2"

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          submodules: recursive

      - uses: reviewdog/action-setup@v1.0.2
        with:
          reviewdog_version: latest

      - name: Install cmake
        uses: lukka/get-cmake@v3.19.2

      - name: Install clang
        run: |
          # Add repository
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo add-apt-repository "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-${{ env.LLVM_VERSION }} main"

          # Install
          sudo apt-get update -m
          sudo apt-get install clang-${{ env.LLVM_VERSION }}

          echo "CXX=clang++-${{ env.LLVM_VERSION }}" >> $GITHUB_ENV

      - name: Install mull
        run: |
          wget -O - https://api.bintray.com/users/bintray/keys/gpg/public.key | sudo apt-key add -
          echo "deb https://dl.bintray.com/mull-project/ubuntu-18 stable main" | sudo tee -a /etc/apt/sources.list
          sudo apt-get update
          sudo apt-get install mull

          # Verify everythings works
          mull-cxx --version

      - name: Display clang include paths
        run: clang++-${{ env.LLVM_VERSION }} -x c++ -c /dev/null -v

      - name: Configure
        run: |
          # Create build directory
          mkdir build
          cd build

          # Generate compile_commands.json
          cmake .. -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DPHI_ENABLE_CONSTEXPRTESTS=Off -DPHI_ENABLE_FAILURE_TESTS=Off -DCMAKE_CXX_FLAGS="-fembed-bitcode -g -O0" -DCMAKE_BUILD_TYPE=Debug

      - name: Build
        run: |
          cd build
          cmake --build .

      - name: Display linked libraries
        run: ldd build/bin/Phi_Unittests

      - name: Run mull
        run: |
          export COMPILE_FLAGS="-isystem /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10 -isystem /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/x86_64-linux-gnu/c++/10 -isystem /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/backward -isystem /usr/local/include -isystem /usr/lib/llvm-11/lib/clang/11.0.1/include -isystem /usr/include/x86_64-linux-gnu -isystem /usr/include"

          cd build
          mull-cxx -linker=clang++-${{ env.LLVM_VERSION }} -compdb-path compile_commands.json -compilation-flags="$COMPILE_FLAGS" -exclude-path="../external/.*" ./bin/Phi_Unittests | tee mull_report.log

          # Remove duplicate entries
          sort mull_report.log | uniq -d > mull_report_filtered.log

      - name: Print results
        run: cat build/mull_report_filtered.log

      - name: ReviewDog check
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cat build/mull_report_filtered.log | reviewdog -efm="%f:%l:%c: warning: %m" -diff="git diff" -reporter=github-check -name mull -level warning
