name: Linux

on:
  push:
    paths:
      # Workflow file itself
      - '.github/workflows/Linux.yml'
      # C++ files
      - '**.cpp'
      - '**.hpp'
      # CMake files
      - '**.cmake'
      - '**.txt'
      # Script files
      - '**.sh'
    tags:
    branches-ignore:
      - 'dependabot/**'
  pull_request:
    branches:
      - main
      - develop
  release:
    types: [published]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  clang:
    # https://github.com/actions/runner-images/blob/main/images/linux/Ubuntu2004-Readme.md
    runs-on: 'ubuntu-20.04'

    strategy:
      fail-fast: false

      matrix:
        compiler_version:
          - "9"
          - "10"
          - "11"
          - "12"
          - "13"
          - "14"
          - "15"

        build_type:
          - "Debug"
          - "RelWithDebInfo"
          - "Release"

        dynamic_test:
          - "none"
          - "asan"
          - "lsan"
          - "tsan"
          - "ubsan"

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Environment
        run: scripts/ci/SetupEnvironment.sh

      - name: Install compiler
        run: scripts/ci/InstallTools.sh clang-${{ matrix.compiler_version }} ninja

      - name: Configure build directory
        run: |
          mkdir build -p
          cd build

          cmake -DCMAKE_BUILD_TYPE:STRING=${{ matrix.build_type }} ..

      - name: Build
        working-directory: ./build
        run: cmake --build . --config ${{ matrix.build_type }}

      - name: Run tests
        working-directory: ./build
        run: ctest . -C ${{ matrix.build_type }}

  gcc:
    # https://github.com/actions/runner-images/blob/main/images/linux/Ubuntu2004-Readme.md
    # https://github.com/actions/runner-images/blob/main/images/linux/Ubuntu2204-Readme.md
    runs-on: ${{ matrix.cfg.os }}

    strategy:
      fail-fast: false

      matrix:
        # Pair of os version and gcc version
        cfg:
          - { os: ubuntu-20.04, compiler_version: "8" }
          - { os: ubuntu-20.04, compiler_version: "9" }
          - { os: ubuntu-20.04, compiler_version: "10" }
          - { os: ubuntu-20.04, compiler_version: "11" }
          - { os: ubuntu-22.04, compiler_version: "12" }

        build_type:
          - "Debug"
          - "RelWithDebInfo"
          - "Release"

        dynamic_test:
          - "none"
          - "asan"
          - "lsan"
          - "tsan"
          - "ubsan"

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Environment
        run: scripts/ci/SetupEnvironment.sh

      - name: Install compiler
        run: scripts/ci/InstallTools.sh gcc-${{ matrix.cfg.compiler_version }} ninja

      - name: Configure build directory
        run: |
          mkdir build -p
          cd build

          cmake -DCMAKE_BUILD_TYPE:STRING=${{ matrix.build_type }} ..

      - name: Build
        working-directory: ./build
        run: cmake --build . --config ${{ matrix.build_type }}

      - name: Run tests
        working-directory: ./build
        run: ctest . -C ${{ matrix.build_type }}
