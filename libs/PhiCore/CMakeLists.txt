# PhiCore
if(${CMAKE_VERSION} VERSION_LESS 3.0)
  project(PhiCore CXX)
else()
  project(PhiCore LANGUAGES CXX)
endif()

file(
  GLOB
  PHI_CORE_HEADERS
  # Algorithm
  "include/phi/algorithm/accumulate.hpp"
  "include/phi/algorithm/all_of.hpp"
  "include/phi/algorithm/any_of.hpp"
  "include/phi/algorithm/at.hpp"
  "include/phi/algorithm/clamp.hpp"
  "include/phi/algorithm/compare.hpp"
  "include/phi/algorithm/copy_n.hpp"
  "include/phi/algorithm/count_if_not.hpp"
  "include/phi/algorithm/count_if.hpp"
  "include/phi/algorithm/count.hpp"
  "include/phi/algorithm/equal.hpp"
  "include/phi/algorithm/exchange.hpp"
  "include/phi/algorithm/fill_n.hpp"
  "include/phi/algorithm/fill.hpp"
  "include/phi/algorithm/find_if_not.hpp"
  "include/phi/algorithm/find_if.hpp"
  "include/phi/algorithm/find.hpp"
  "include/phi/algorithm/for_each_n.hpp"
  "include/phi/algorithm/for_each.hpp"
  "include/phi/algorithm/is_sorted_until.hpp"
  "include/phi/algorithm/is_sorted.hpp"
  "include/phi/algorithm/iterator_swap.hpp"
  "include/phi/algorithm/lexicographical_compare.hpp"
  "include/phi/algorithm/max.hpp"
  "include/phi/algorithm/min.hpp"
  "include/phi/algorithm/none_off.hpp"
  "include/phi/algorithm/string_compare_unsafe.hpp"
  "include/phi/algorithm/string_compare.hpp"
  "include/phi/algorithm/string_equals_ignore_case.hpp"
  "include/phi/algorithm/string_equals.hpp"
  "include/phi/algorithm/string_length.hpp"
  "include/phi/algorithm/string_length_unsafe.hpp"
  "include/phi/algorithm/swap_ranges.hpp"
  "include/phi/algorithm/swap.hpp"
  # compiler_support/bugs
  "include/phi/compiler_support/bugs/gcc_102305.hpp"
  # compiler_support/extensions
  "include/phi/compiler_support/extensions/pragma_once.hpp"
  "include/phi/compiler_support/extensions/zero_size_array.hpp"
  # compiler_support/intrinsics
  "include/phi/compiler_support/intrinsics/abort.hpp"
  "include/phi/compiler_support/intrinsics/add_lvalue_reference.hpp"
  "include/phi/compiler_support/intrinsics/add_pointer.hpp"
  "include/phi/compiler_support/intrinsics/add_rvalue_reference.hpp"
  "include/phi/compiler_support/intrinsics/address_of.hpp"
  "include/phi/compiler_support/intrinsics/array_extent.hpp"
  "include/phi/compiler_support/intrinsics/array_rank.hpp"
  "include/phi/compiler_support/intrinsics/decay.hpp"
  "include/phi/compiler_support/intrinsics/dynamic_object_size.hpp"
  "include/phi/compiler_support/intrinsics/fabs.hpp"
  "include/phi/compiler_support/intrinsics/floor.hpp"
  "include/phi/compiler_support/intrinsics/has_trivial_destructor.hpp"
  "include/phi/compiler_support/intrinsics/has_unique_object_representations.hpp"
  "include/phi/compiler_support/intrinsics/has_virtual_destructor.hpp"
  "include/phi/compiler_support/intrinsics/is_abstract.hpp"
  "include/phi/compiler_support/intrinsics/is_aggregate.hpp"
  "include/phi/compiler_support/intrinsics/is_arithmetic.hpp"
  "include/phi/compiler_support/intrinsics/is_array.hpp"
  "include/phi/compiler_support/intrinsics/is_assignable.hpp"
  "include/phi/compiler_support/intrinsics/is_base_of.hpp"
  "include/phi/compiler_support/intrinsics/is_bounded_array.hpp"
  "include/phi/compiler_support/intrinsics/is_class.hpp"
  "include/phi/compiler_support/intrinsics/is_complete.hpp"
  "include/phi/compiler_support/intrinsics/is_compound.hpp"
  "include/phi/compiler_support/intrinsics/is_const.hpp"
  "include/phi/compiler_support/intrinsics/is_constant_evaluated.hpp"
  "include/phi/compiler_support/intrinsics/is_constructible.hpp"
  "include/phi/compiler_support/intrinsics/is_convertible.hpp"
  "include/phi/compiler_support/intrinsics/is_destructible.hpp"
  "include/phi/compiler_support/intrinsics/is_empty.hpp"
  "include/phi/compiler_support/intrinsics/is_enum.hpp"
  "include/phi/compiler_support/intrinsics/is_final.hpp"
  "include/phi/compiler_support/intrinsics/is_floating_point.hpp"
  "include/phi/compiler_support/intrinsics/is_function.hpp"
  "include/phi/compiler_support/intrinsics/is_fundamental.hpp"
  "include/phi/compiler_support/intrinsics/is_integral.hpp"
  "include/phi/compiler_support/intrinsics/is_literal_type.hpp"
  "include/phi/compiler_support/intrinsics/is_lvalue_expr.hpp"
  "include/phi/compiler_support/intrinsics/is_lvalue_reference.hpp"
  "include/phi/compiler_support/intrinsics/is_member_function_pointer.hpp"
  "include/phi/compiler_support/intrinsics/is_member_object_pointer.hpp"
  "include/phi/compiler_support/intrinsics/is_member_pointer.hpp"
  "include/phi/compiler_support/intrinsics/is_nothrow_assignable.hpp"
  "include/phi/compiler_support/intrinsics/is_nothrow_constructible.hpp"
  "include/phi/compiler_support/intrinsics/is_nothrow_destructible.hpp"
  "include/phi/compiler_support/intrinsics/is_null_pointer.hpp"
  "include/phi/compiler_support/intrinsics/is_object.hpp"
  "include/phi/compiler_support/intrinsics/is_pod.hpp"
  "include/phi/compiler_support/intrinsics/is_pointer_interconvertible_base_of.hpp"
  "include/phi/compiler_support/intrinsics/is_pointer_interconvertible_with_class.hpp"
  "include/phi/compiler_support/intrinsics/is_pointer.hpp"
  "include/phi/compiler_support/intrinsics/is_polymorphic.hpp"
  "include/phi/compiler_support/intrinsics/is_reference.hpp"
  "include/phi/compiler_support/intrinsics/is_referenceable.hpp"
  "include/phi/compiler_support/intrinsics/is_rvalue_expr.hpp"
  "include/phi/compiler_support/intrinsics/is_rvalue_reference.hpp"
  "include/phi/compiler_support/intrinsics/is_same.hpp"
  "include/phi/compiler_support/intrinsics/is_scalar.hpp"
  "include/phi/compiler_support/intrinsics/is_scoped_enum.hpp"
  "include/phi/compiler_support/intrinsics/is_signed.hpp"
  "include/phi/compiler_support/intrinsics/is_standard_layout.hpp"
  "include/phi/compiler_support/intrinsics/is_trivial.hpp"
  "include/phi/compiler_support/intrinsics/is_trivially_assignable.hpp"
  "include/phi/compiler_support/intrinsics/is_trivially_constructible.hpp"
  "include/phi/compiler_support/intrinsics/is_trivially_copyable.hpp"
  "include/phi/compiler_support/intrinsics/is_trivially_destructible.hpp"
  "include/phi/compiler_support/intrinsics/is_union.hpp"
  "include/phi/compiler_support/intrinsics/is_unsigned.hpp"
  "include/phi/compiler_support/intrinsics/is_volatile.hpp"
  "include/phi/compiler_support/intrinsics/make_signed.hpp"
  "include/phi/compiler_support/intrinsics/make_unsigned.hpp"
  "include/phi/compiler_support/intrinsics/memcmp.hpp"
  "include/phi/compiler_support/intrinsics/object_size.hpp"
  "include/phi/compiler_support/intrinsics/offsetof.hpp"
  "include/phi/compiler_support/intrinsics/remove_all_extents.hpp"
  "include/phi/compiler_support/intrinsics/remove_const.hpp"
  "include/phi/compiler_support/intrinsics/remove_cv.hpp"
  "include/phi/compiler_support/intrinsics/remove_cvref.hpp"
  "include/phi/compiler_support/intrinsics/remove_extent.hpp"
  "include/phi/compiler_support/intrinsics/remove_pointer.hpp"
  "include/phi/compiler_support/intrinsics/remove_reference.hpp"
  "include/phi/compiler_support/intrinsics/remove_volatile.hpp"
  "include/phi/compiler_support/intrinsics/source_location.hpp"
  "include/phi/compiler_support/intrinsics/trap.hpp"
  "include/phi/compiler_support/intrinsics/underlying_type.hpp"
  # compiler_support
  "include/phi/compiler_support/architecture.hpp"
  "include/phi/compiler_support/assume.hpp"
  "include/phi/compiler_support/char8_t.hpp"
  "include/phi/compiler_support/compiler.hpp"
  "include/phi/compiler_support/consteval.hpp"
  "include/phi/compiler_support/constexpr.hpp"
  "include/phi/compiler_support/counter.hpp"
  "include/phi/compiler_support/cpp_standard.hpp"
  "include/phi/compiler_support/current_function.hpp"
  "include/phi/compiler_support/deprecated.hpp"
  "include/phi/compiler_support/extended_attributes.hpp"
  "include/phi/compiler_support/features.hpp"
  "include/phi/compiler_support/flatten.hpp"
  "include/phi/compiler_support/inline_variables.hpp"
  "include/phi/compiler_support/inline.hpp"
  "include/phi/compiler_support/intrinsics.hpp"
  "include/phi/compiler_support/libraries.hpp"
  "include/phi/compiler_support/likely.hpp"
  "include/phi/compiler_support/nodiscard.hpp"
  "include/phi/compiler_support/noexcept.hpp"
  "include/phi/compiler_support/noreturn.hpp"
  "include/phi/compiler_support/platform.hpp"
  "include/phi/compiler_support/restrict.hpp"
  "include/phi/compiler_support/standard_library.hpp"
  "include/phi/compiler_support/unreachable.hpp"
  "include/phi/compiler_support/unused.hpp"
  "include/phi/compiler_support/warning.hpp"
  # container
  "include/phi/container/array.hpp"
  "include/phi/container/bit_view.hpp"
  "include/phi/container/dynamic_array.hpp"
  "include/phi/container/pair.hpp"
  "include/phi/container/string_view.hpp"
  "include/phi/container/zstring.hpp"
  # core
  "include/phi/core/address_of.hpp"
  "include/phi/core/as_const.hpp"
  "include/phi/core/assert.hpp"
  "include/phi/core/boolean.hpp"
  "include/phi/core/byte.hpp"
  "include/phi/core/crtp.hpp"
  "include/phi/core/declval.hpp"
  "include/phi/core/error_or.hpp"
  "include/phi/core/flat_ptr.hpp"
  "include/phi/core/floating_point.hpp"
  "include/phi/core/forward.hpp"
  "include/phi/core/ignore.hpp"
  "include/phi/core/integer.hpp"
  "include/phi/core/intptr_t.hpp"
  "include/phi/core/invoke.hpp"
  "include/phi/core/max_align_t.hpp"
  "include/phi/core/memcmp.hpp"
  "include/phi/core/monitor.hpp"
  "include/phi/core/move_if_noexcept.hpp"
  "include/phi/core/move.hpp"
  "include/phi/core/named_type.hpp"
  "include/phi/core/narrow_cast.hpp"
  "include/phi/core/non_copyable.hpp"
  "include/phi/core/nullptr_t.hpp"
  "include/phi/core/observer_ptr.hpp"
  "include/phi/core/offsetof.hpp"
  "include/phi/core/optional.hpp"
  "include/phi/core/pointer_traits.hpp"
  "include/phi/core/ptrdiff_t.hpp"
  "include/phi/core/ref_ptr.hpp"
  "include/phi/core/scope_guard.hpp"
  "include/phi/core/scope_ptr.hpp"
  "include/phi/core/scoped_value_guard.hpp"
  "include/phi/core/size_t.hpp"
  "include/phi/core/sized_types.hpp"
  "include/phi/core/source_location.hpp"
  "include/phi/core/stop_watch.hpp"
  "include/phi/core/to_address.hpp"
  "include/phi/core/types.hpp"
  "include/phi/core/unsafe_cast.hpp"
  "include/phi/core/voidify.hpp"
  "include/phi/core/wint_t.hpp"
  # forward
  "include/phi/forward/array.hpp"
  "include/phi/forward/char_traits.hpp"
  "include/phi/forward/flat_ptr.hpp"
  "include/phi/forward/observer_ptr.hpp"
  "include/phi/forward/ref_ptr.hpp"
  "include/phi/forward/scope_ptr.hpp"
  "include/phi/forward/string_view.hpp"
  # forward/std
  "include/phi/forward/std/allocator.hpp"
  "include/phi/forward/std/array.hpp"
  "include/phi/forward/std/char_traits.hpp"
  "include/phi/forward/std/hash.hpp"
  "include/phi/forward/std/pair.hpp"
  "include/phi/forward/std/reference_wrapper.hpp"
  "include/phi/forward/std/span.hpp"
  "include/phi/forward/std/string_view.hpp"
  "include/phi/forward/std/string.hpp"
  # iterator
  "include/phi/iterator/advance.hpp"
  "include/phi/iterator/back_insert_iterator.hpp"
  "include/phi/iterator/back_inserter.hpp"
  "include/phi/iterator/begin.hpp"
  "include/phi/iterator/data.hpp"
  "include/phi/iterator/distance.hpp"
  "include/phi/iterator/empty.hpp"
  "include/phi/iterator/end.hpp"
  "include/phi/iterator/iter_reference.hpp"
  "include/phi/iterator/iterator_tags.hpp"
  "include/phi/iterator/iterator_traits.hpp"
  "include/phi/iterator/rbegin.hpp"
  "include/phi/iterator/rend.hpp"
  "include/phi/iterator/reverse_iterator.hpp"
  # limits
  "include/phi/limits/float_denorm_style.hpp"
  "include/phi/limits/float_round_style.hpp"
  # math
  "include/phi/math/abs.hpp"
  "include/phi/math/ceil.hpp"
  "include/phi/math/common.hpp"
  "include/phi/math/constants.hpp"
  "include/phi/math/floor.hpp"
  "include/phi/math/is_infinity.hpp"
  "include/phi/math/is_nan.hpp"
  "include/phi/math/signum.hpp"
  "include/phi/math/vector2.hpp"
  "include/phi/math/vector3.hpp"
  # preprocessor
  "include/phi/preprocessor/bool.hpp"
  "include/phi/preprocessor/function_like_macro.hpp"
  "include/phi/preprocessor/glue.hpp"
  "include/phi/preprocessor/if_else.hpp"
  "include/phi/preprocessor/if.hpp"
  "include/phi/preprocessor/source_line.hpp"
  "include/phi/preprocessor/stringify.hpp"
  "include/phi/preprocessor/versioning.hpp"
  # text
  "include/phi/text/ascii_char.hpp"
  "include/phi/text/binary_digit_value.hpp"
  "include/phi/text/char_traits.hpp"
  "include/phi/text/digit_value.hpp"
  "include/phi/text/hex_digit_value.hpp"
  "include/phi/text/is_alpha_numeric.hpp"
  "include/phi/text/is_alpha.hpp"
  "include/phi/text/is_ascii.hpp"
  "include/phi/text/is_binary_digit.hpp"
  "include/phi/text/is_blank.hpp"
  "include/phi/text/is_control.hpp"
  "include/phi/text/is_digit.hpp"
  "include/phi/text/is_graphical_character.hpp"
  "include/phi/text/is_hex_digit.hpp"
  "include/phi/text/is_lower_case.hpp"
  "include/phi/text/is_octal_digit.hpp"
  "include/phi/text/is_printable.hpp"
  "include/phi/text/is_punctuation.hpp"
  "include/phi/text/is_space.hpp"
  "include/phi/text/is_upper_case.hpp"
  "include/phi/text/octal_digit_value.hpp"
  "include/phi/text/to_lower_case.hpp"
  "include/phi/text/to_upper_case.hpp"
  # type_system
  "include/phi/type_system/max.hpp"
  "include/phi/type_system/min.hpp"
  # type_traits/detail
  "include/phi/type_traits/detail/invoke_impl.hpp"
  "include/phi/type_traits/detail/nat.hpp"
  "include/phi/type_traits/detail/yes_no_type.hpp"
  # type_traits
  "include/phi/type_traits/add_const.hpp"
  "include/phi/type_traits/add_cv.hpp"
  "include/phi/type_traits/add_lvalue_reference.hpp"
  "include/phi/type_traits/add_member_const.hpp"
  "include/phi/type_traits/add_pointer.hpp"
  "include/phi/type_traits/add_rvalue_reference.hpp"
  "include/phi/type_traits/add_volatile.hpp"
  "include/phi/type_traits/alignment_of.hpp"
  "include/phi/type_traits/array_size.hpp"
  "include/phi/type_traits/bool_constant.hpp"
  "include/phi/type_traits/common_type.hpp"
  "include/phi/type_traits/conditional.hpp"
  "include/phi/type_traits/conjunction.hpp"
  "include/phi/type_traits/copy_const.hpp"
  "include/phi/type_traits/copy_cv.hpp"
  "include/phi/type_traits/copy_volatile.hpp"
  "include/phi/type_traits/decay.hpp"
  "include/phi/type_traits/disable_if.hpp"
  "include/phi/type_traits/disjunction.hpp"
  "include/phi/type_traits/enable_if.hpp"
  "include/phi/type_traits/extent.hpp"
  "include/phi/type_traits/false_t.hpp"
  "include/phi/type_traits/has_difference_type.hpp"
  "include/phi/type_traits/has_element_type.hpp"
  "include/phi/type_traits/has_unique_object_representations.hpp"
  "include/phi/type_traits/has_value_type.hpp"
  "include/phi/type_traits/has_virtual_destructor.hpp"
  "include/phi/type_traits/integral_constant.hpp"
  "include/phi/type_traits/invoke_result.hpp"
  "include/phi/type_traits/is_abstract.hpp"
  "include/phi/type_traits/is_aggregate.hpp"
  "include/phi/type_traits/is_any_of_rc.hpp"
  "include/phi/type_traits/is_any_of_rcv.hpp"
  "include/phi/type_traits/is_any_of_rcvref.hpp"
  "include/phi/type_traits/is_any_of_rref.hpp"
  "include/phi/type_traits/is_any_of_rv.hpp"
  "include/phi/type_traits/is_any_of.hpp"
  "include/phi/type_traits/is_arithmetic.hpp"
  "include/phi/type_traits/is_array.hpp"
  "include/phi/type_traits/is_assignable.hpp"
  "include/phi/type_traits/is_base_of.hpp"
  "include/phi/type_traits/is_bool.hpp"
  "include/phi/type_traits/is_bounded_array.hpp"
  "include/phi/type_traits/is_class.hpp"
  "include/phi/type_traits/is_complete_or_unbounded_void.hpp"
  "include/phi/type_traits/is_complete_or_unbounded.hpp"
  "include/phi/type_traits/is_complete_or_void.hpp"
  "include/phi/type_traits/is_complete_or.hpp"
  "include/phi/type_traits/is_compound.hpp"
  "include/phi/type_traits/is_const.hpp"
  "include/phi/type_traits/is_constant_evaluated.hpp"
  "include/phi/type_traits/is_constructible.hpp"
  "include/phi/type_traits/is_convertible.hpp"
  "include/phi/type_traits/is_copy_assignable.hpp"
  "include/phi/type_traits/is_copy_constructible.hpp"
  "include/phi/type_traits/is_default_constructible.hpp"
  "include/phi/type_traits/is_derived_from.hpp"
  "include/phi/type_traits/is_destructible.hpp"
  "include/phi/type_traits/is_empty.hpp"
  "include/phi/type_traits/is_enum.hpp"
  "include/phi/type_traits/is_final.hpp"
  "include/phi/type_traits/is_floating_point.hpp"
  "include/phi/type_traits/is_function_pointer.hpp"
  "include/phi/type_traits/is_function.hpp"
  "include/phi/type_traits/is_fundamental.hpp"
  "include/phi/type_traits/is_implicitly_default_constructible.hpp"
  "include/phi/type_traits/is_integer.hpp"
  "include/phi/type_traits/is_integral.hpp"
  "include/phi/type_traits/is_invocable_r.hpp"
  "include/phi/type_traits/is_invocable.hpp"
  "include/phi/type_traits/is_layout_compatible.hpp"
  "include/phi/type_traits/is_literal_type.hpp"
  "include/phi/type_traits/is_lvalue_reference.hpp"
  "include/phi/type_traits/is_member_function_pointer.hpp"
  "include/phi/type_traits/is_member_object_pointer.hpp"
  "include/phi/type_traits/is_member_pointer.hpp"
  "include/phi/type_traits/is_move_assignable.hpp"
  "include/phi/type_traits/is_move_constructible.hpp"
  "include/phi/type_traits/is_non_bool_integral.hpp"
  "include/phi/type_traits/is_none_of.hpp"
  "include/phi/type_traits/is_nothrow_assignable.hpp"
  "include/phi/type_traits/is_nothrow_constructible.hpp"
  "include/phi/type_traits/is_nothrow_convertible.hpp"
  "include/phi/type_traits/is_nothrow_copy_assignable.hpp"
  "include/phi/type_traits/is_nothrow_copy_constructible.hpp"
  "include/phi/type_traits/is_nothrow_default_constructible.hpp"
  "include/phi/type_traits/is_nothrow_destructible.hpp"
  "include/phi/type_traits/is_nothrow_invocable_r.hpp"
  "include/phi/type_traits/is_nothrow_invocable.hpp"
  "include/phi/type_traits/is_nothrow_move_assignable.hpp"
  "include/phi/type_traits/is_nothrow_move_constructible.hpp"
  "include/phi/type_traits/is_nothrow_swappable_with.hpp"
  "include/phi/type_traits/is_nothrow_swappable.hpp"
  "include/phi/type_traits/is_null_pointer_or_pointer.hpp"
  "include/phi/type_traits/is_null_pointer.hpp"
  "include/phi/type_traits/is_object.hpp"
  "include/phi/type_traits/is_pointer.hpp"
  "include/phi/type_traits/is_polymorphic.hpp"
  "include/phi/type_traits/is_reference_wrapper.hpp"
  "include/phi/type_traits/is_reference.hpp"
  "include/phi/type_traits/is_referenceable.hpp"
  "include/phi/type_traits/is_rvalue_reference.hpp"
  "include/phi/type_traits/is_safe_arithmetic.hpp"
  "include/phi/type_traits/is_safe_bool.hpp"
  "include/phi/type_traits/is_safe_floating_point.hpp"
  "include/phi/type_traits/is_safe_fundamental.hpp"
  "include/phi/type_traits/is_safe_integer.hpp"
  "include/phi/type_traits/is_safe_integral.hpp"
  "include/phi/type_traits/is_safe_non_bool_integral.hpp"
  "include/phi/type_traits/is_safe_scalar.hpp"
  "include/phi/type_traits/is_safe_signed_integer.hpp"
  "include/phi/type_traits/is_safe_signed.hpp"
  "include/phi/type_traits/is_safe_type.hpp"
  "include/phi/type_traits/is_safe_unsigned_integer.hpp"
  "include/phi/type_traits/is_safe_unsigned.hpp"
  "include/phi/type_traits/is_same_rc.hpp"
  "include/phi/type_traits/is_same_rcv.hpp"
  "include/phi/type_traits/is_same_rcvref.hpp"
  "include/phi/type_traits/is_same_rref.hpp"
  "include/phi/type_traits/is_same_rv.hpp"
  "include/phi/type_traits/is_same.hpp"
  "include/phi/type_traits/is_scalar.hpp"
  "include/phi/type_traits/is_scoped_enum.hpp"
  "include/phi/type_traits/is_signed_integer.hpp"
  "include/phi/type_traits/is_signed.hpp"
  "include/phi/type_traits/is_standard_layout.hpp"
  "include/phi/type_traits/is_static_castable_to.hpp"
  "include/phi/type_traits/is_swappable_with.hpp"
  "include/phi/type_traits/is_swappable.hpp"
  "include/phi/type_traits/is_trivial.hpp"
  "include/phi/type_traits/is_trivially_assignable.hpp"
  "include/phi/type_traits/is_trivially_constructible.hpp"
  "include/phi/type_traits/is_trivially_copy_assignable.hpp"
  "include/phi/type_traits/is_trivially_copy_constructible.hpp"
  "include/phi/type_traits/is_trivially_copyable.hpp"
  "include/phi/type_traits/is_trivially_default_constructible.hpp"
  "include/phi/type_traits/is_trivially_move_assignable.hpp"
  "include/phi/type_traits/is_trivially_move_constructible.hpp"
  "include/phi/type_traits/is_unbounded_array.hpp"
  "include/phi/type_traits/is_union.hpp"
  "include/phi/type_traits/is_unsafe_arithmetic.hpp"
  "include/phi/type_traits/is_unsafe_bool.hpp"
  "include/phi/type_traits/is_unsafe_floating_point.hpp"
  "include/phi/type_traits/is_unsafe_fundamental.hpp"
  "include/phi/type_traits/is_unsafe_integer.hpp"
  "include/phi/type_traits/is_unsafe_integral.hpp"
  "include/phi/type_traits/is_unsafe_non_bool_integral.hpp"
  "include/phi/type_traits/is_unsafe_scalar.hpp"
  "include/phi/type_traits/is_unsafe_signed_integer.hpp"
  "include/phi/type_traits/is_unsafe_signed.hpp"
  "include/phi/type_traits/is_unsafe_type.hpp"
  "include/phi/type_traits/is_unsafe_unsigned_integer.hpp"
  "include/phi/type_traits/is_unsafe_unsigned.hpp"
  "include/phi/type_traits/is_unscoped_enum.hpp"
  "include/phi/type_traits/is_unsigned_integer.hpp"
  "include/phi/type_traits/is_unsigned.hpp"
  "include/phi/type_traits/is_void.hpp"
  "include/phi/type_traits/is_volatile.hpp"
  "include/phi/type_traits/make_safe.hpp"
  "include/phi/type_traits/make_signed.hpp"
  "include/phi/type_traits/make_unsafe.hpp"
  "include/phi/type_traits/make_unsigned.hpp"
  "include/phi/type_traits/negation.hpp"
  "include/phi/type_traits/rank.hpp"
  "include/phi/type_traits/remove_all_extents.hpp"
  "include/phi/type_traits/remove_const.hpp"
  "include/phi/type_traits/remove_cv.hpp"
  "include/phi/type_traits/remove_cvref.hpp"
  "include/phi/type_traits/remove_extent.hpp"
  "include/phi/type_traits/remove_pointer.hpp"
  "include/phi/type_traits/remove_reference.hpp"
  "include/phi/type_traits/remove_volatile.hpp"
  "include/phi/type_traits/signed_int_of_size.hpp"
  "include/phi/type_traits/size_constant.hpp"
  "include/phi/type_traits/static_clamp.hpp"
  "include/phi/type_traits/static_max.hpp"
  "include/phi/type_traits/static_min.hpp"
  "include/phi/type_traits/to_safe.hpp"
  "include/phi/type_traits/to_underlying.hpp"
  "include/phi/type_traits/to_unsafe.hpp"
  "include/phi/type_traits/true_t.hpp"
  "include/phi/type_traits/type_identity.hpp"
  "include/phi/type_traits/underlying_type.hpp"
  "include/phi/type_traits/unsigned_int_of_size.hpp"
  "include/phi/type_traits/void_t.hpp"
  #
  "include/phi/phi_config.hpp"
  "include/phi/type_traits.hpp")

file(GLOB PHI_CORE_SOURCES "src/core/assert.cpp")

phi_add_library(
  NAME
  ${PROJECT_NAME}
  STATIC
  SOURCES
  ${PHI_CORE_SOURCES}
  HEADERS
  ${PHI_CORE_HEADERS}
  ALIAS_TARGET
  Phi::Core
  PUBLIC_INCLUDE_DIRS
  "include"
  "${PHI_GENERATED_FILES_DIR}"
  PRIVATE_INCLUDE_DIRS
  "src")

# Link with threads if we have it
if(Threads_FOUND)
  target_link_libraries(${PROJECT_NAME} PUBLIC Threads::Threads)
endif()
