#include <phi/test/test_macros.hpp>

#include "constexpr_helper.hpp"
#include <phi/algorithm/string_equals.hpp>
#include <phi/compiler_support/platform.hpp>

TEST_CASE("Platform")
{
#if PHI_PLATFORM_IS(ANDROID)
    STATIC_REQUIRE(PHI_PLATFORM_ANDROID());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_APPLE());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_BSD());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_DOS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_FREEBSD());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_IOS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_IOS_SIMULATOR());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_LINUX());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_MACOS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_OPENBSD());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_SOLARIS());
    STATIC_REQUIRE(PHI_PLATFORM_UNIX());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_WEB());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_WINDOWS());

    STATIC_REQUIRE(phi::string_equals(PHI_PLATFORM_NAME(), "Android"));
#else
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_ANDROID());
    STATIC_REQUIRE(PHI_PLATFORM_IS_NOT(ANDROID));
#endif

#if PHI_PLATFORM_IS(APPLE)
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_ANDROID());
    STATIC_REQUIRE(PHI_PLATFORM_APPLE());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_BSD());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_DOS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_FREEBSD());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_LINUX());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_OPENBSD());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_SOLARIS());
    STATIC_REQUIRE(PHI_PLATFORM_UNIX());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_WEB());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_WINDOWS());
#else
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_APPLE());
    STATIC_REQUIRE(PHI_PLATFORM_IS_NOT(APPLE));
#endif

#if PHI_PLATFORM_IS(BSD)
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_ANDROID());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_APPLE());
    STATIC_REQUIRE(PHI_PLATFORM_BSD());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_DOS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_IOS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_IOS_SIMULATOR());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_LINUX());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_MACOS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_SOLARIS());
    STATIC_REQUIRE(PHI_PLATFORM_UNIX());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_WEB());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_WINDOWS());
#else
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_BSD());
    STATIC_REQUIRE(PHI_PLATFORM_IS_NOT(BSD));
#endif

#if PHI_PLATFORM_IS(DOS)
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_ANDROID());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_APPLE());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_BSD());
    STATIC_REQUIRE(PHI_PLATFORM_DOS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_FREEBSD());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_IOS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_IOS_SIMULATOR());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_LINUX());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_MACOS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_OPENBSD());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_SOLARIS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_UNIX());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_WEB());
#else
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_DOS());
    STATIC_REQUIRE(PHI_PLATFORM_IS_NOT(DOS));
#endif

#if PHI_PLATFORM_IS(FREEBSD)
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_ANDROID());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_APPLE());
    STATIC_REQUIRE(PHI_PLATFORM_BSD());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_DOS());
    STATIC_REQUIRE(PHI_PLATFORM_FREEBSD());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_IOS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_IOS_SIMULATOR());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_LINUX());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_MACOS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_OPENBSD());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_SOLARIS());
    STATIC_REQUIRE(PHI_PLATFORM_UNIX());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_WEB());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_WINDOWS());

    STATIC_REQUIRE(phi::string_equals(PHI_PLATFORM_NAME(), "FreeBSD"));
#else
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_FREEBSD());
    STATIC_REQUIRE(PHI_PLATFORM_IS_NOT(FREEBSD));
#endif

#if PHI_PLATFORM_IS(IOS)
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_ANDROID());
    STATIC_REQUIRE(PHI_PLATFORM_APPLE());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_BSD());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_DOS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_FREEBSD());
    STATIC_REQUIRE(PHI_PLATFORM_IOS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_LINUX());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_MACOS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_OPENBSD());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_SOLARIS());
    STATIC_REQUIRE(PHI_PLATFORM_UNIX());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_WEB());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_WINDOWS());

#    if PHI_PLATFORM_IS_NOT(IOS_SIMULATOR)
    STATIC_REQUIRE(phi::string_equals(PHI_PLATFORM_NAME(), "iOS"));
#    endif
#else
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_IOS());
    STATIC_REQUIRE(PHI_PLATFORM_IS_NOT(IOS));
#endif

#if PHI_PLATFORM_IS(IOS_SIMULATOR)
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_ANDROID());
    STATIC_REQUIRE(PHI_PLATFORM_APPLE());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_BSD());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_DOS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_FREEBSD());
    STATIC_REQUIRE(PHI_PLATFORM_IOS());
    STATIC_REQUIRE(PHI_PLATFORM_IOS_SIMULATOR());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_LINUX());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_MACOS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_OPENBSD());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_SOLARIS());
    STATIC_REQUIRE(PHI_PLATFORM_UNIX());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_WEB());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_WINDOWS());

    STATIC_REQUIRE(phi::string_equals(PHI_PLATFORM_NAME(), "iOS Simulator"));
#else
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_IOS_SIMULATOR());
    STATIC_REQUIRE(PHI_PLATFORM_IS_NOT(IOS_SIMULATOR));
#endif

#if PHI_PLATFORM_IS(LINUX)
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_ANDROID());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_APPLE());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_BSD());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_DOS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_FREEBSD());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_IOS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_IOS_SIMULATOR());
    STATIC_REQUIRE(PHI_PLATFORM_LINUX());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_MACOS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_OPENBSD());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_SOLARIS());
    STATIC_REQUIRE(PHI_PLATFORM_UNIX());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_WEB());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_WINDOWS());

    STATIC_REQUIRE(phi::string_equals(PHI_PLATFORM_NAME(), "Linux"));
#else
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_LINUX());
    STATIC_REQUIRE(PHI_PLATFORM_IS_NOT(LINUX));
#endif

#if PHI_PLATFORM_IS(MACOS)
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_ANDROID());
    STATIC_REQUIRE(PHI_PLATFORM_APPLE());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_BSD());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_DOS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_FREEBSD());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_IOS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_IOS_SIMULATOR());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_LINUX());
    STATIC_REQUIRE(PHI_PLATFORM_MACOS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_OPENBSD());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_SOLARIS());
    STATIC_REQUIRE(PHI_PLATFORM_UNIX());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_WEB());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_WINDOWS());

    STATIC_REQUIRE(phi::string_equals(PHI_PLATFORM_NAME(), "MacOS"));
#else
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_MACOS());
    STATIC_REQUIRE(PHI_PLATFORM_IS_NOT(MACOS));
#endif

#if PHI_PLATFORM_IS(OPENBSD)
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_ANDROID());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_APPLE());
    STATIC_REQUIRE(PHI_PLATFORM_BSD());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_DOS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_FREEBSD());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_IOS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_IOS_SIMULATOR());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_LINUX());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_MACOS());
    STATIC_REQUIRE(PHI_PLATFORM_OPENBSD());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_SOLARIS());
    STATIC_REQUIRE(PHI_PLATFORM_UNIX());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_WEB());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_WINDOWS());

    STATIC_REQUIRE(phi::string_equals(PHI_PLATFORM_NAME(), "OpenBSD"));
#else
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_OPENBSD());
    STATIC_REQUIRE(PHI_PLATFORM_IS_NOT(OPENBSD));
#endif

#if PHI_PLATFORM_IS(SOLARIS)
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_ANDROID());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_APPLE());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_BSD());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_DOS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_FREEBSD());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_IOS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_IOS_SIMULATOR());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_LINUX());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_MACOS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_OPENBSD());
    STATIC_REQUIRE(PHI_PLATFORM_SOLARIS());
    STATIC_REQUIRE(PHI_PLATFORM_UNIX());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_WEB());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_WINDOWS());

    STATIC_REQUIRE(phi::string_equals(PHI_PLATFORM_NAME(), "Solaris"));
#else
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_SOLARIS());
    STATIC_REQUIRE(PHI_PLATFORM_IS_NOT(SOLARIS));
#endif

#if PHI_PLATFORM_IS(UNIX)
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_DOS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_WINDOWS());
#else
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_UNIX());
    STATIC_REQUIRE(PHI_PLATFORM_IS_NOT(UNIX));
#endif

#if PHI_PLATFORM_IS(WEB)
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_ANDROID());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_APPLE());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_BSD());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_DOS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_FREEBSD());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_IOS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_IOS_SIMULATOR());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_LINUX());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_MACOS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_OPENBSD());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_SOLARIS());
    STATIC_REQUIRE(PHI_PLATFORM_WEB());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_WINDOWS());

    STATIC_REQUIRE(phi::string_equals(PHI_PLATFORM_NAME(), "Web"));
#else
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_WEB());
    STATIC_REQUIRE(PHI_PLATFORM_IS_NOT(WEB));
#endif

#if PHI_PLATFORM_IS(WINDOWS)
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_ANDROID());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_APPLE());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_BSD());
    STATIC_REQUIRE(PHI_PLATFORM_DOS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_FREEBSD());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_IOS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_IOS_SIMULATOR());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_LINUX());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_MACOS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_OPENBSD());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_SOLARIS());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_UNIX());
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_WEB());
    STATIC_REQUIRE(PHI_PLATFORM_WINDOWS());

    STATIC_REQUIRE(phi::string_equals(PHI_PLATFORM_NAME(), "Windows"));
#else
    STATIC_REQUIRE_FALSE(PHI_PLATFORM_WINDOWS());
    STATIC_REQUIRE(PHI_PLATFORM_IS_NOT(WINDOWS));
#endif

    EXT_STATIC_REQUIRE_FALSE(phi::string_equals(PHI_PLATFORM_NAME(), "Unknown"));
}
