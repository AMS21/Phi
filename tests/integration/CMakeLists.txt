# Include all headers
file(GLOB PHI_LIBRARIES ${PHI_BASE_DIR}/libs/*)

# Build file content
set(ALL_INCLUDE_FILE "IncludeAllFiles.cpp")
set(FILE_CONTENT
    "// DO NOT MODIFY THIS FILES CONTENTS IT'S AUTOMATICALLY GENERATED BY CMAKE DURING BUILDS\n\n")

# Loop through every library
foreach(lib ${PHI_LIBRARIES})
  if (NOT IS_DIRECTORY ${lib})
    continue()
  endif()

  # Get all header files from the lib
  file(GLOB_RECURSE headers ${lib}/include/*.hpp)

  file(RELATIVE_PATH lib_name ${PHI_BASE_DIR}/libs ${lib})
  string(APPEND FILE_CONTENT "// ${lib_name}\n")

  foreach(file ${headers})
    # Include each header file relative from its include directory
    file(RELATIVE_PATH path ${lib}/include ${file})
    string(APPEND FILE_CONTENT "#include <" ${path} ">\n")
  endforeach()

  string(APPEND FILE_CONTENT "\n")
endforeach()

string(APPEND FILE_CONTENT "int main() { return 0; }\n")

# Generate File
file(
  GENERATE
  OUTPUT "${CMAKE_CURRENT_BINARY_DIR}/${ALL_INCLUDE_FILE}"
  CONTENT "${FILE_CONTENT}")

# Add test
set(ALL_INCLUDE_NAME "PhiEngine_AllIncludes")

add_executable(${ALL_INCLUDE_NAME} "${CMAKE_CURRENT_BINARY_DIR}/${ALL_INCLUDE_FILE}")

target_link_libraries(${ALL_INCLUDE_NAME} PRIVATE Phi::InternalProjectOptions Phi::Core)
set_target_properties(${ALL_INCLUDE_NAME} PROPERTIES FOLDER "Tests/Integration")
enable_static_analyzers(${ALL_INCLUDE_NAME})

add_test(IncludeAll ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${ALL_INCLUDE_NAME})
